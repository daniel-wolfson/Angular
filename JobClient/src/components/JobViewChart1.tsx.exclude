import axios from "axios";
import React from "react";
import Chart from "react-google-charts";

interface IProps {}

export interface IState {
  data: (string | number)[][];
  options: {};
}

export class JobViewChart1 extends React.Component<IProps, IState> {
  chartEvents = [
    {
      eventName: "select",
      callback({ chartWrapper }: any) {
        console.log("Selected ", chartWrapper.getChart().getSelection());
      },
    },
  ];

  constructor(props: IProps) {
    super(props);

    this.state = {
      data: new Array<[]>(),
      options: {},
    };
  }

  getChartData() {
    axios.get("http://www.json-generator.com/api/json/get/coXIyroYAy?indent=2").then(res => {
        const coin = res.data;
        let labels = [];
        let data = [];
        coin.forEach((element: any) => {
          labels.push(element.labels);
          data.push(element.data);
          });

       console.log(coin)
        this.setState({
          // chartData: {
          //   labels:labels,
          //   datasets: [
          //     {
          //       label: "Population",
          //       data: data,
          //       backgroundColor: [
          //         "rgba(255, 99, 132, 0.6)",
          //         "rgba(54, 162, 235, 0.6)",
          //         "rgba(255, 99, 132, 0.6)"
          //       ],
          //     }
          //   ]
          // }
        });
      });
    }

  componentDidMount() {
    // const response = await fetch(
    //   'https://api.exchangeratesapi.io/latest?symbols=USD,GBP,CAD',
    // )
    // const json = await response.json()
    // const rateCurrencyNames = Object.keys(json.rates)
    // const rateCurrencyValues = Object.values(json.rates)
    // const chartData = [['Currency Name', 'Currency Rate']]
    // for (let i = 0; i < rateCurrencyNames.length; i += 1) {
    //   chartData.push([rateCurrencyNames[i], rateCurrencyValues[i]])
    // }
    var options = {
      title: "Comulative job views vs. prediction",
      vAxis: { title: "Job views" },
      hAxis: { title: "Jobs" },
      seriesType: ["bars", "bars"],
      series: { 1: { type: "bars" }, 2: { type: "bar" } },
      legend: { position: "bottom" },
      colors: ["limegreen"]
    };
    var data = [
      ["Days", "Active jobs", "Jobs views", "Predicted job views"],
      ["05", 165, 938, 938],
      ["06", 135, 1120, 1120],
      ["07", 157, 1167, 1167],
      ["08", 139, 1110, 1110],
      ["09", 136, 6916, 6916],
    ];
    // var data1 = [
    //   ["Age", "Weight"],
    //   [8, 12], [4, 5.5], [11, 14], [4, 5], [3, 3.5], [6.5, 7],
    // ];

    this.setState({
      data: data,
      options: options,
    });
  }

  render() {
    return (
      <div style={{ display: "flex" }}>
        <Chart
          width={"100%"}
          height={"300px"}
          chartType="ComboChart"
          loader={<div>Loading Chart</div>}
          data={this.state.data}
          options={this.state.options}
          rootProps={{ "data-testid": "1" }}
        />
      </div>
    );
  }
}
